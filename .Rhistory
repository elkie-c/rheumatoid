xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient"))
df_counts
df_subset
prescription_traj %>% select(DispensingDate = "DispensingDate(yyyy-mm-dd)", bioo_or_bios = "bioo_or_bios", ingredient = "ingredient")
prescription_traj
# Create a subset of the data frame with only the columns we need
df_subset <- prescription_traj %>% select(DispensingDate = "DispensingDate(yyyy-mm-dd)", Patient_ID, bioo_or_bios = "bioo_or_bios", ingredient = "ingredient")
prescription_traj
ReferenceKey
# Create a subset of the data frame with only the columns we need
df_subset <- prescription_traj %>% select(DispensingDate = "DispensingDate(yyyy-mm-dd)", ReferenceKey, bioo_or_bios = "bioo_or_bios", ingredient = "ingredient")
# Convert DispensingDate to Date format
df_subset$DispensingDate <- ymd(df_subset$DispensingDate)
# Extract year from DispensingDate
df_subset$Year <- year(df_subset$DispensingDate)
# Count the number of unique patients per year, bioo_or_bios, and ingredient
df_counts <- df_subset %>%
filter(!is.na(bioo_or_bios) & !is.na(ingredient)) %>%
distinct(Year, ReferenceKey, bioo_or_bios, ingredient) %>%
group_by(Year, bioo_or_bios, ingredient) %>%
summarise(Count = n())
# Create a stacked bar plot of bioo_or_bios and ingredient counts by year
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, label = Count)) +
geom_bar(stat = "identity", position = "stack") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = "stack") +
facet_wrap(~ bioo_or_bios, ncol = 2, scales = "free") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of bioo_or_bios and Ingredient Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient"))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient"))
# Create a stacked bar plot of bioo_or_bios and ingredient counts by year
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, label = Count)) +
geom_bar(stat = "identity", position = "stack") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
# Create a stacked bar plot of bioo_or_bios and ingredient counts by year
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
prescription_traj
prescription_traj %>% select(bioo_or_bios, DrugName_clean) %>% summarise(Count = n())
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean) %>%
summarise(Count = n())
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean) %>%
summarise()
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean)
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
summarise(DrugName_clean, bioo_or_bios)
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios)
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
summarise(DrugName_clean, bioo_or_bios)
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
summarise(DrugName_clean, bioo_or_bios)
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
group_by(DrugName_clean, bioo_or_bios) %>%
summarise()
prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
group_by(DrugName_clean, bioo_or_bios) %>%
summarise(count = n())
df <- prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
group_by(DrugName_clean, bioo_or_bios) %>%
summarise(count = n())
print(df, n = 24)
prescription_traj
unique(prescription_traj$ReferenceKey)
count(unique(prescription_traj$ReferenceKey))
length(unique(prescription_traj$ReferenceKey))
prescription_traj
prescription_traj
bio_df
prescription_sub
?grep
prescription_sub
grep(pattern = "REMICADE", x = prescription_sub$DrugName)
prescription_sub$brand
unique(prescription_sub$brand)
bio_df
paste(bioo_string, collapse = "|")
paste(bios_string, collapse = "|")
infliximab
gsub(pattern = "[[:space:]\u00A0]", replacement = "", x = bioo_string)
bioo_string <- gsub(pattern = "[[:space:]\u00A0]", replacement = "", x = bioo_string)
bios_string <- gsub(pattern = "[[:space:]\u00A0]", replacement = "", x = bios_string)
bios_string
# now, create the bio column (which says if it is biosimilar or biooriginator)
prescription_sub <- prescription_sub %>%
mutate(
bioo_or_bios = case_when(
stringr::str_detect(DrugName, paste(bioo_string, collapse = "|")) ~ "o", # using string infliximab, because sometimes only brand name, but not ingredient name given. So you would miss that if you hadn't use this string
stringr::str_detect(DrugName, paste(bios_string, collapse = "|")) ~ "s",
TRUE ~ NA_character_)
)
# Thirdly, now is just brute force to extract the brand names as there is no clever meaningful way of doing so
prescription_sub <- prescription_sub %>%
mutate(
brand = case_when(
str_detect(DrugName, "REMICADE") ~ "REMICADE",
str_detect(DrugName, "REMSIMA") ~ "REMSIMA",
str_detect(DrugName, "HUMIRA") ~ "HUMIRA",
str_detect(DrugName, "HULIO") ~ "HULIO",
str_detect(DrugName, "ADALLOCE") ~ "ADALLOCE",
str_detect(DrugName, "AMGEVITA") ~ "AMGEVITA",
str_detect(DrugName, "IDACIO") ~ "IDACIO",
str_detect(DrugName, "HYRIMOZ") ~ "HYRIMOZ",
str_detect(DrugName, "MABTHERA") ~ "MABTHERA",
str_detect(DrugName, "RIXATHON") ~ "RIXATHON",
str_detect(DrugName, "TRUXIMA") ~ "TRUXIMA",
TRUE ~ NA_character_)
) # note even though a lot of brands, just for sake of completeness; our data only has HUMIRA, REMICADE, and REMSIMA
unique(prescription_sub$brand)
prescription_sub$brand
grep(pattern = paste(bio_df %>% select(`Brand name`) %>% pull(), collapse = "|"), x = unique(prescription$DrugName), value = TRUE)
unique(prescription$DrugName)
paste(bio_df %>% select(`Brand name`) %>% pull(), collapse = "|")
pattern <-paste(bio_df %>% select(`Brand name`) %>% pull(), collapse = "|")
pattern <- gsub(pattern = "[[:space:]\u00A0]", replacement = "", x = pattern)
pattern
grep(pattern, x = unique(prescription$DrugName), value = TRUE)
grep(pattern, x = unique(prescription$DrugName))
# now we have a prescription table with cleaned information. Now we need to merge the diagnosis table to ONLY get the pts that meet our criteria, and look at the descriptive statistics of their uptake
prescription_sub <- prescription_sub %>% filter(ReferenceKey %in% diagnosis_sub$Reference.Key.) # essential step
# remove white space and non-breaking space; convert to capital letters
drugs <- gsub("[[:space:]\u00A0]", "",
toupper(c(cdmard, bioo, bio_df$`Brand name`, unique(bio_df$Ingredient))))
# Clean the drug names using case_when() and str_detect()
prescription_traj <- prescription_sub %>%
mutate(
DrugName_clean = case_when(
str_detect(DrugName, str_c(drugs, collapse = "|")) ~ str_extract(DrugName, str_c(drugs, collapse = "|")),
TRUE ~ NA_character_
)
)
prescription_traj
# where it is not NA; so we only take the non-NA entries
prescription_traj <- prescription_traj %>% filter(!is.na(DrugName_clean))
tnfi <- bioo_df %>% filter(`Mode of action` == "Tumor Necrosis Factor Inhibitor") %>%  pull(Agent) %>% toupper()
cd28 <- bioo_df %>% filter(`Mode of action` == "CD28") %>%  pull(Agent) %>% toupper()
cd20 <- bioo_df %>% filter(`Mode of action` == "CD20") %>%  pull(Agent) %>% toupper()
il6 <- bioo_df %>% filter(`Mode of action` == "IL-6") %>%  pull(Agent) %>% toupper()
jaki <- bioo_df %>% filter(`Mode of action` == "Janus kinase inhibitor") %>%  pull(Agent) %>% toupper()
# add column of drug mechanism of action (cDMARD, TNF inhibitor etc) for ease of stratification
prescription_traj <- prescription_traj %>%
mutate(
moa = case_when(
str_detect(DrugName_clean, paste(cdmard, collapse = "|")) ~ "cdmard",
str_detect(DrugName_clean, paste(tnfi, collapse = "|")) ~ "tnfi",
str_detect(DrugName_clean, paste(cd28, collapse = "|")) ~ "cd28",
str_detect(DrugName_clean, paste(cd20, collapse = "|")) ~ "cd20",
str_detect(DrugName_clean, paste(il6, collapse = "|")) ~ "il6",
str_detect(DrugName_clean, paste(jaki, collapse = "|")) ~ "jaki",
TRUE ~ NA_character_)
)
#look at the counts
df <- prescription_traj %>%
select(ReferenceKey, bioo_or_bios, DrugName_clean) %>%
distinct(ReferenceKey, DrugName_clean, bioo_or_bios) %>%
group_by(DrugName_clean, bioo_or_bios) %>%
summarise(count = n())
print(df, n = 24)
print(df, n = 27)
length(unique(prescription_traj$ReferenceKey))
prescription_traj
# Create a subset of the data frame with only the columns we need
df_subset <- prescription_traj %>% select(DispensingDate = "DispensingDate(yyyy-mm-dd)", ReferenceKey, bioo_or_bios = "bioo_or_bios", ingredient = "ingredient")
# Convert DispensingDate to Date format
df_subset$DispensingDate <- ymd(df_subset$DispensingDate)
# Extract year from DispensingDate
df_subset$Year <- year(df_subset$DispensingDate)
# Count the number of unique patients per year, bioo_or_bios, and ingredient
df_counts <- df_subset %>%
filter(!is.na(bioo_or_bios) & !is.na(ingredient)) %>%
distinct(Year, ReferenceKey, bioo_or_bios, ingredient) %>%
group_by(Year, bioo_or_bios, ingredient) %>%
summarise(Count = n())
# Create a stacked bar plot of bioo_or_bios and ingredient counts by year
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
df
print(df, n = 27)
# number of pts
prescription_traj
# number of pts
prescription_traj$ReferenceKey
# number of pts
unique(prescription_traj$ReferenceKey)
# number of pts
length(unique(prescription_traj$ReferenceKey))
# Create a subset of the data frame with only the columns we need
df_subset <- prescription_traj %>% select(DispensingDate = "DispensingDate(yyyy-mm-dd)", ReferenceKey, bioo_or_bios = "bioo_or_bios", ingredient = "ingredient")
# Convert DispensingDate to Date format
df_subset$DispensingDate <- ymd(df_subset$DispensingDate)
# Extract year from DispensingDate
df_subset$Year <- year(df_subset$DispensingDate)
# Count the number of unique patients per year, bioo_or_bios, and ingredient
df_counts <- df_subset %>%
filter(!is.na(bioo_or_bios) & !is.na(ingredient)) %>%
distinct(Year, ReferenceKey, bioo_or_bios, ingredient) %>%
group_by(Year, bioo_or_bios, ingredient) %>%
summarise(Count = n())
# Create a stacked bar plot of bioo_or_bios and ingredient counts by year
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient"))
# Create a stacked bar plot of bioo_or_bios and ingredient counts by year
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year")
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
df_counts
print(df_counts, n = 32)
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.5) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient, label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.8) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
print(df_counts, n = 32)
ggplot(df_counts, aes(x = Year, y = Count, fill = c(ingredient, bioo_or_bios), label = Count)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.8) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(aes(fill = bioo_or_bios), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = interaction(ingredient, bioo_or_bios))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = interaction(ingredient, bioo_or_bios))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = Count), position = position_dodge(width = 0.8), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(aes(fill = bioo_or_bios), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(aes(fill = bioo_or_bios), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_bar(aes(fill = ingredient), stat = "identity") +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(aes(fill = bioo_or_bios), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_bar(aes(fill = ingredient), stat = "identity")
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(position = position_dodge(width = 0.8), aes(fill = interaction(ingredient, bioo_or_bios)), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year)) +
position_dodge(width = 0.8) +
position_stack(vjust = 0.5)
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(aes(fill = interaction(ingredient, bioo_or_bios)), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year)) +
position_dodge(width = 0.8) +
position_stack(vjust = 0.5)
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(aes(fill = interaction(ingredient, bioo_or_bios)), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(position = position_dodge(width = 0.8), aes(fill = interaction(ingredient, bioo_or_bios)), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year)) +
position_dodge(width = 0.8) +
position_stack(vjust = 0.5)
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(aes(fill = bioo_or_bios), stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_bar(aes(fill = ingredient), stat = "identity") +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_bar(aes(fill = ingredient), stat = "identity") +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = ingredient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_manual(values = c("orange", "blue"), name = "Biooriginator or Biosimilar", labels = c("Biooriginator", "Biosimilar")) +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = Count), position = position_dodge(width = 0.8), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
output <- "/Users/elsiechan/Desktop/prescription_traj.rds"
saveRDS(object = prescription_traj, file = output)
prescription_traj
diagnosis_sub
prescription_sub
prescription_sub %>% filter(!is.na(ingredient))
bio_df
prescription_traj
bio_df
prescription_traj
ggplot(df_counts, aes(x = Year, y = Count, fill = interaction(ingredient, bioo_or_bios))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = Count), position = position_dodge(width = 0.8), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = interaction(bioo_or_bios, ingredient))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
ggplot(df_counts, aes(x = Year, y = Count, fill = bioo_or_bios, ingredient)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set1") +
xlab("Year") +
ylab("Count") +
ggtitle("Frequency of Biooriginator or Biosimilar Uptake by Year and Ingredient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Ingredient and Biooriginator/Biosimilar")) +
scale_x_continuous(breaks = unique(df_counts$Year), labels = unique(df_counts$Year))
