vals <- seq(start_val, end_val, by = 1)
# add back the .x so later the steps can create the multipels of it
vals <- paste0(vals, ".x")
return(vals)
} else {
return(icd) # so if hyphen is not grepped, just give the original icd
}
}
expand_hyphen(icd_char[1])
icd_char
# add these two numbers just to simulate it, MRE
icd_char <- paste0(weight_df[6, 2] %>% pull(), ",277.x,", "800")
icd_char <- strsplit(x, ",")[[1]]
icd_char
expand_hyphen(icd_char[1])
for (i in seq_along(icd_char)) {
icd_char[i] <- expand_hyphen(icd_char[i]) # update each index
}
# add these two numbers just to simulate it, MRE
icd_char <- paste0(weight_df[6, 2] %>% pull(), ",277.x,", "800")
icd_char <- strsplit(x, ",")[[1]]
for (i in seq_along(icd_char)) {
icd_char[i] <- c(expand_hyphen(icd_char[i])) # update each index
}
icd_char
for (i in icd_char) {
icd_char[icd_char == i] <- expand_hyphen(i) # update each index
}
icd_char
for (i in icd_char) {
print(i)
icd_char[icd_char == i] <- expand_hyphen(i) # update each index
}
icd_char
for (icd in icd_char) {
# icd_char[icd_char] <- expand_hyphen(icd_char[i]) # update each index
}
for (icd in icd_char) {
# icd_char[icd_char] <- expand_hyphen(icd_char[i]) # update each index
print(icd)
}
for (icd in icd_char) {
# icd_char[icd_char] <- expand_hyphen(icd_char[i]) # update each index
print(icd)
expand_hyphen(icd)
}
# add these two numbers just to simulate it, MRE
icd_char <- paste0(weight_df[6, 2] %>% pull(), ",277.x,", "800")
icd_char <- strsplit(x, ",")[[1]]
for (icd in icd_char) {
icd_char[icd_char == icd] <- expand_hyphen(icd) # update each index
print(icd)
expand_hyphen(icd)
}
icd_char
icd_char
# add these two numbers just to simulate it, MRE
icd_char <- paste0(weight_df[6, 2] %>% pull(), ",277.x,", "800")
icd_char <- strsplit(x, ",")[[1]]
icd_char
for (icd in icd_char) {
# icd_char[icd_char == icd] <- expand_hyphen(icd) # update each index
print(icd)
expand_hyphen(icd)
}
for (icd in icd_char) {
# icd_char[icd_char == icd] <- expand_hyphen(icd) # update each index
print(icd)
print(expand_hyphen(icd))
}
for (icd in icd_char) {
# icd_char[icd_char == icd] <- expand_hyphen(icd) # update each index
print(icd)
print(expand_hyphen(icd))
print(icd_char[icd_char == icd])
}
for (icd in icd_char) {
icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
print(icd)
print(expand_hyphen(icd))
print(icd_char[icd_char == icd])
}
# add these two numbers just to simulate it, MRE
icd_char <- paste0(weight_df[6, 2] %>% pull(), ",277.x,", "800")
icd_char <- strsplit(x, ",")[[1]]
sub
?sub
?str_replace
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
str_replace(string = icd_char[icd_char == icd], pattern = icd_char[icd_char == icd], replacement = expand_hyphen(icd))
print(icd)
print(expand_hyphen(icd))
print(icd_char[icd_char == icd])
}
icd_char
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
icd_char <- str_replace(string = icd_char, pattern = icd_char[icd_char == icd], replacement = expand_hyphen(icd))
print(icd)
print(expand_hyphen(icd))
print(icd_char[icd_char == icd])
}
icd_char
icd_char
output
output <- character(0)
output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
output <- c(output, expand_hyphen(icd))
}
output
icd_char
dehyphened_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
dehyphened_output <- c(dehyphened_output, expand_hyphen(icd))
}
dehyphened_output
expand_x <- function(icd) {
# Check if the input contains a hyphen
if (grepl("x", icd)) {
# Extract the numeric portion of the input
val <- as.numeric(gsub("[^0-9.]", "", icd))
# Create a sequence of values from val to val+0.9
vals <- seq(val, val+0.9, by = 0.1)
return(vals)
} else {
return(icd)
}
}
expand_x_output <- character(0)
expand_x_output <- character(0)
for (icd in dehyphenated_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
dehyphened_output <- character(0)
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
expand_hyphen_output
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
expand_x_output
weight_df
weight_df
weight_df
weight_df
nrow(weight_df)
seq_along(nrow(weight_df))
seq(nrow(weight_df))
for (i in seq(nrow(weight_df))) {
print(weight_df[i, "ICD9_unref"])
}
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
print(icd_char)
}
weight_df$ICD9_clean <- NA
weight_df
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- expand_x_output # so set the NA, ICD9_clean to this clean value
}
debug(expand_hyphen)
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- expand_x_output # so set the NA, ICD9_clean to this clean value
}
ls()
icd
icd
icd
end_val
icd
range
icd
debug(expand_hyphen)
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- expand_x_output # so set the NA, ICD9_clean to this clean value
}
icd
icd_char
weight_df$ICD9_clean <- NA
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
# split by comma to get a character vector for each icd_char
icd_char <- strsplit(icd_char, ",")[[1]]
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- expand_x_output # so set the NA, ICD9_clean to this clean value
}
icd
vals
vals
undebug(expand_hyphen)
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
# split by comma to get a character vector for each icd_char
icd_char <- strsplit(icd_char, ",")[[1]]
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- expand_x_output # so set the NA, ICD9_clean to this clean value
}
expand_x_output
expand_x_output
paste(expand_x_output, ",")
paste(expand_x_output, sep = ",")
paste(expand_x_output, collapse = ",")
weight_df$ICD9_clean <- NA
weight_df
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
# split by comma to get a character vector for each icd_char
icd_char <- strsplit(icd_char, ",")[[1]]
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- paste(expand_x_output, collapse = ",") # so set the NA, ICD9_clean to this clean value; collapse turns it into one string
}
debug(expand_x_output)
debug(expand_x)
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
# split by comma to get a character vector for each icd_char
icd_char <- strsplit(icd_char, ",")[[1]]
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- paste(expand_x_output, collapse = ",") # so set the NA, ICD9_clean to this clean value; collapse turns it into one string
}
ls
debug(expand_x)
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
# split by comma to get a character vector for each icd_char
icd_char <- strsplit(icd_char, ",")[[1]]
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- paste(expand_x_output, collapse = ",") # so set the NA, ICD9_clean to this clean value; collapse turns it into one string
}
icd
icd
icd
icd
icd
icd
icd
icd
icd
val
icd
gsub("[^0-9.]", "", icd)
val <- gsub("[^0-9.]", "", icd)
val
seq(val, val+0.9, by = 0.1)
val
weight_df
seq(1, 9)
val
val
val
icd_char
# Create a sequence of values from val to val+0.9
val <- "428.1.x"
# Create a sequence of values from val to val+0.9
# val <- "428.1.x"
val
# Extract the numeric portion of the input
val <- gsub("[^0-9.]", "", icd)
val
paste(val, seq(0, 9))
paste(val, seq(0, 9), sep = "")
# paste to get all the values from 0 to 9
vals <- paste(val, seq(0, 9), sep = "")
vals
expand_x <- function(icd) {
# Check if the input contains a hyphen
if (grepl("x", icd)) {
# Extract the numeric portion of the input
val <- gsub("[^0-9.]", "", icd)
# Create a sequence of values from val to val+0.9
# val <- "428.1."
# paste to get all the values from 0 to 9
vals <- paste(val, seq(0, 9), sep = "")
return(vals)
} else {
return(icd)
}
}
weight_df$ICD9_clean <- NA
for (i in seq(nrow(weight_df))) {
icd_char <- weight_df[i, "ICD9_unref"] %>% pull()
# split by comma to get a character vector for each icd_char
icd_char <- strsplit(icd_char, ",")[[1]]
expand_hyphen_output <- character(0)
for (icd in icd_char) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_hyphen_output <- c(expand_hyphen_output, expand_hyphen(icd))
}
expand_x_output <- character(0)
for (icd in expand_hyphen_output) {
# icd_char[icd_char == icd] <- paste0(expand_hyphen(icd)) # update each index
expand_x_output <- c(expand_x_output, expand_x(icd))
}
weight_df[i, "ICD9_clean"] <- paste(expand_x_output, collapse = ",") # so set the NA, ICD9_clean to this clean value; collapse turns it into one string
}
icd_char
weight_df
View(weight_df)
diagnosis_sub
weight_df
diagnosis_sub
diagnosis_sub %>% select(All.Diagnosis.Description..HAMDCT..)
diagnosis_sub
diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."]
regmatches(pattern = "\d+.*(?=:)", text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE)
regmatches(pattern = "\\d+.*(?=:)", text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE)
?regexpr
regmatches(diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
regexpr(
pattern = "\\d+.*(?=:)",
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."]h,
perl = TRUE
))
regmatches(diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
regexpr(
pattern = "\\d+.*(?=:)",
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE)
)
regmatches(diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
regexpr(
pattern = "(?<=\\()\d+.*(?=:)", # after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE)
)
regmatches(diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
regexpr(
pattern = "(?<=\\()\d+.*(?=:)", # after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE)
)
?regmatches
regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE
)
regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE
)
)
regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."]
regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
diagnosis_sub$ICD <- regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\()\\d+.*(?=:)",
# after ( but not including, \ the \ character, not including the colon
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
?grep
grep(pattern = "(?<=\\()\\d+.*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."])
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."]
diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."]
grep(pattern = "(?<=\\()\\d+.*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."])
grep(pattern = "(?<=\\()\\d+.*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE)
grep(pattern = "(?<=\\()\\d+.*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE, invert = TRUE)
diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."][grep(pattern = "(?<=\\()\\d+.*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE, invert = TRUE)]
diagnosis_sub$ICD <- regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\().*(?=:)",
# after ( but not including, \ the \ character, not including the colon
# (?<=\\()\\d+.*(?=:)   # this is the older version which didn't work if ( followed by E or V alphabet in the ICD code
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
grep(pattern = "(?<=\\()\\d+.*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE, invert = TRUE)
diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."][grep(pattern = "(?<=\\().*(?=:)", x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."], perl = TRUE, invert = TRUE)]
diagnosis_sub$ICD <- regmatches(
x = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
m = regexpr(
pattern = "(?<=\\().*(?=:)",
# after ( but not including, \ the \ character, not including the colon
# (?<=\\()\\d+.*(?=:)   # this is the older version which didn't work if ( followed by E or V alphabet in the ICD code
text = diagnosis_sub[, "All.Diagnosis.Description..HAMDCT.."],
perl = TRUE))
diagnosis_sub
diagnosis_sub %>% mutate(before_ra = if_else(Reference.Date < first_ra, T, F))
diagnosis_sub %>% mutate(before_ra = if_else(Reference.Date. < first_ra, T, F))
diagnosis_sub
weight_df
diagnosis_sub
weight_df
weight_df
