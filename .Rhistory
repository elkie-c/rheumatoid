legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Comparison of multimorbidity score after introduction of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Comparison of multimorbidity score after introduction of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
# create shaded region for standard error of mean
ggplot(df_summary, aes(x = year, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os)) +
labs(x = "Years after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$year)), breaks = seq(0, max(df_summary$year), 1)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"), legend.position = "bottom") +
geom_text(aes(label = paste0("n=", n_patients, "\n", ifelse(os == "o", "Bio-originator", "Biosimilar"))),
vjust = ifelse(df_summary$os == "o", -0.5, 1.5),
color = "gray20", size = 2.5, check_overlap = TRUE, nudge_y = 0.2, nudge_x = 0.1) +
ggtitle("Comparison of multimorbidity score after introduction of Bio-originator and Biosimilar")
# calculate mean and standard error of score, and number of patients, for each month and os group
df_summary <- df %>%
filter(day != 1096) %>%  # because very few datapoints for biosimilars
mutate(month = as.numeric(day)/30.44) %>%
group_by(month, os) %>%
summarise(mean_score = mean(score, na.rm = TRUE),
se_score = sd(score, na.rm = TRUE) / sqrt(sum(!is.na(score))),
n_patients = sum(!is.na(score)))
ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Comparison of multimorbidity score after introduction of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Comparison of multimorbidity score after introduction of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
path
ggsave(paste0(path, "/charts/", "line_os_comparison_multimorbidity", ".svg"), my_plot, device = "svg")
ggsave(paste0(path, "/charts/", "line_os_comparison_multimorbidity", ".png"), my_plot, device = "png", dpi = 300)
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Comparison of multimorbidity score \n after introduction of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Comparison of multimorbidity score \nafter introduction of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Multimorbidity score from First use \n of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Multimorbidity score from First use\n of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot
# linear mixed effect model------------------------------------
# create a new column for the change in score
df_summary$change_score <- df_summary$mean_score - df_summary$mean_score[df_summary$os == "Bio-originator" & df_summary$month == 0]
df_summary
df_summary$mean_score
df_summary$mean_score[df_summary$os == "Bio-originator" & df_summary$month == 0]
df_summary$mean_score[df_summary$os == "Bio-originator" & df_summary$month == 0]
df_summary$mean_score[df_summary$os == "o" & df_summary$month == 0]
# linear mixed effect model------------------------------------
# create a new column for the change in score
df_summary$change_score <- df_summary$mean_score - df_summary$mean_score[df_summary$os == "o" & df_summary$month == 0]
# The Estimate column for the os variable represents the difference in the change in score between the two drug types (Biosimilars vs. Bio-originators), after controlling for the baseline score and time trends. If the estimate is statistically significant (i.e., the p-value is less than your chosen alpha level), then you can conclude that there is evidence of a difference in the change in score between the two drug types.
model <- lmer(change_score ~ os + month + mean_score + (1 | patient_id), data = df_summary)
# The Estimate column for the os variable represents the difference in the change in score between the two drug types (Biosimilars vs. Bio-originators), after controlling for the baseline score and time trends. If the estimate is statistically significant (i.e., the p-value is less than your chosen alpha level), then you can conclude that there is evidence of a difference in the change in score between the two drug types.
model <- lme4::lmer(change_score ~ os + month + mean_score + (1 | patient_id), data = df_summary)
df
df_summary <- df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup() %>%
group_by(os, month) %>%
summarize(mean_score = mean(mean_score, na.rm = TRUE)) %>%
ungroup() %>%
mutate(change_score = mean_score - mean_score[os == "o" & month == 0])
df_summary
df
df %>% mutate(month = as.numeric(day)/30.44)
df <- df %>% mutate(month = as.numeric(day)/30.44)
df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE))
df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup() %>%
group_by(os, month) %>%
summarize(mean_score = mean(mean_score, na.rm = TRUE)) %>%
ungroup() %>%
mutate(change_score = mean_score - mean_score[os == "o" & month == 0])
df
df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup() %>%
group_by(os, month)
df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE))
df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup() %>%
group_by(os, month)
df
# Calculate mean score for each patient and drug type
df_summary <- df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup()
# Calculate mean score for each drug type and month
df_summary <- df_summary %>%
group_by(os, month) %>%
summarize(mean_score = mean(mean_score, na.rm = TRUE)) %>%
ungroup()
df_summary
# Calculate mean score for each patient and drug type
df_summary_patient <- df %>%
group_by(os, ReferenceKey) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup()
# Calculate mean score for each drug type and month
df_summary_drug <- df_summary_patient %>%
group_by(os, month) %>%
summarize(mean_score = mean(mean_score, na.rm = TRUE)) %>%
ungroup()
# Calculate mean score for each drug type and month
df_summary_drug <- df %>%
group_by(os, month) %>%
summarize(mean_score = mean(mean_score, na.rm = TRUE)) %>%
ungroup()
# Calculate mean score for each drug type and month
df_summary_drug <- df %>%
group_by(os, month) %>%
summarize(mean_score = mean(score, na.rm = TRUE)) %>%
ungroup()
# Calculate change score relative to baseline for each drug type and month
df_summary_drug <- df_summary_drug %>%
mutate(change_score = mean_score - mean_score[os == "o" & month == 0])
# Merge df and df_summary_drug to obtain patient-level data
df_merged <- merge(df, df_summary_drug, by = c("os", "month"))
# Merge df_merged and df_summary_patient to obtain patient-level data with mean score
df_merged <- merge(df_merged, df_summary_patient, by = c("os", "ReferenceKey"))
# Fit mixed-effects model with random intercepts for each patient
model <- lmer(change_score ~ os + month + mean_score.y + (1 | ReferenceKey), data = df_merged)
# Fit mixed-effects model with random intercepts for each patient
model <- lme4::lmer(change_score ~ os + month + mean_score.y + (1 | ReferenceKey), data = df_merged)
cor(df_merged[, c("os", "month", "mean_score.y")])
df_merged
df
# welch's t test------------------------------------------------------------
# instead of paired t test due to different variance of data
# Subset data for day 0 and day 12 for treatment s and treatment o
df_s_m0 <- df %>% filter(month == 0 & os == "s")
df_s_m12 <- df %>% filter(month == 12 & os == "s")
df_o_m0 <- df %>% filter(month == 0 & os == "o")
df_o_m12 <- df %>% filter(month == 12 & os == "o")
# Calculate the increase in score for treatment s and treatment o
df_s <- data.frame(ID = df_s_m0$ReferenceKey, increase = df_s_m12$score - df_s_m0$score)
ID = df_s_m0$ReferenceKey
df_s_m12
df
df %>% mutate(month = as.numeric(day)/30.44)
df <- df %>% mutate(month = round(as.numeric(day)/30.44))
df
# welch's t test------------------------------------------------------------
# instead of paired t test due to different variance of data
# Subset data for day 0 and day 12 for treatment s and treatment o
df_s_m0 <- df %>% filter(month == 0 & os == "s")
df_s_m12 <- df %>% filter(month == 12 & os == "s")
df_o_m0 <- df %>% filter(month == 0 & os == "o")
df_o_m12 <- df %>% filter(month == 12 & os == "o")
# Calculate the increase in score for treatment s and treatment o
df_s <- data.frame(ID = df_s_m0$ReferenceKey, increase = df_s_m12$score - df_s_m0$score)
df_o <- data.frame(ID = df_o_m0$ReferenceKey, increase = df_o_m12$score - df_o_m0$score)
# Perform Welch's t-test
t.test(df_s$increase, df_o$increase, var.equal = FALSE)
df_o
# Create histograms and normal probability plots of the data; check normal distribution
par(mfrow = c(2,2))
hist(df_s$increase, main = "Treatment S")
qqnorm(df_s$increase); qqline(df_s$increase)
hist(df_o$increase, main = "Treatment O")
qqnorm(df_o$increase); qqline(df_o$increase)
# Perform normality tests
shapiro.test(df_s$increase)
shapiro.test(df_o$increase)
# Perform Wilcoxon rank-sum test
wilcox.test(df_s$increase, df_o$increase)
# repeat for month 24, two years
df_s_m24 <- df %>% filter(month == 24 & os == "s")
df_o_m24 <- df %>% filter(month == 24 & os == "o")
# Calculate the increase in score for treatment s and treatment o
df_s <- data.frame(ID = df_s_m0$ReferenceKey, increase = df_s_m24$score - df_s_m0$score)
df_o <- data.frame(ID = df_o_m0$ReferenceKey, increase = df_o_m24$score - df_o_m0$score)
# Perform Wilcoxon rank-sum test
wilcox.test(df_s$increase, df_o$increase)
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Multimorbidity score from First use\n of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot
# welch's t test------------------------------------------------------------
# instead of paired t test due to different variance of data
# Subset data for day 0 and day 12 for treatment s and treatment o
df_s_m0 <- df %>% filter(month == 0 & os == "s")
df_s_m12 <- df %>% filter(month == 12 & os == "s")
df_o_m0 <- df %>% filter(month == 0 & os == "o")
df_o_m12 <- df %>% filter(month == 12 & os == "o")
# Calculate the increase in score for treatment s and treatment o
df_s <- data.frame(ID = df_s_m0$ReferenceKey, increase = df_s_m12$score - df_s_m0$score)
df_o <- data.frame(ID = df_o_m0$ReferenceKey, increase = df_o_m12$score - df_o_m0$score)
# Perform Wilcoxon rank-sum test
test_result_1year <- wilcox.test(df_s$increase, df_o$increase)
# repeat for month 24, two years
df_s_m24 <- df %>% filter(month == 24 & os == "s")
df_o_m24 <- df %>% filter(month == 24 & os == "o")
# Calculate the increase in score for treatment s and treatment o
df_s <- data.frame(ID = df_s_m0$ReferenceKey, increase = df_s_m24$score - df_s_m0$score)
df_o <- data.frame(ID = df_o_m0$ReferenceKey, increase = df_o_m24$score - df_o_m0$score)
# Perform Wilcoxon rank-sum test
test_result_2year <- wilcox.test(df_s$increase, df_o$increase)
myplot + annotate("text", x = 6, y = 30, label = paste0("Wilcoxon rank-sum test: p = ", round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4), " (2-year), not significant."), size = 3, color = "black", fill = "white", box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 6, y = 30, label = paste0("Wilcoxon rank-sum test: p = ", round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4), " (2-year), not significant."), size = 3, color = "black", fill = "white", box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 6, y = 2, label = paste0("Wilcoxon rank-sum test: p = ", round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4), " (2-year), not significant."), size = 3, color = "black", fill = "white", box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 3, y = 1.6, label = paste0("Wilcoxon rank-sum test: p = ", round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4), " (2-year), not significant."), size = 3, color = "black", fill = "white", box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 3, y = 1.6, label = paste0("Wilcoxon rank-sum test: p = ", round(test_result_1year$p.value, 3), " (1-year) / ", round(test_result_2year$p.value, 3), " (2-year), not significant."), size = 3, color = "black", fill = "white", box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
myplot + annotate("text", x = 6, y = 30, label = paste0("Wilcoxon rank-sum test:\n p = ",
round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4),
" (2-year),\n not significant."), size = 3, color = "black", fill = "white",
alpha = 0.8, box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 6, y = 30, label = paste0("Wilcoxon rank-sum test:\n p = ",
round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4),
" (2-year),\n not significant."), size = 3, color = "black", fill = "white",
alpha = 0.8, box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 3, y = 1.6, label = paste0("Wilcoxon rank-sum test:\n p = ",
round(test_result_1year$p.value, 4), " (1-year) / ", round(test_result_2year$p.value, 4),
" (2-year),\n not significant."), size = 3, color = "black", fill = "white",
alpha = 0.8, box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot + annotate("text", x = 3, y = 1.6, label = paste0("Wilcoxon rank-sum test:\n p = ",
round(test_result_1year$p.value, 3), " (1-year) / ", round(test_result_2year$p.value, 3),
" (2-year),\n not statistically significant"), size = 3, color = "black", fill = "white",
alpha = 0.8, box.color = "black", fontface = "bold", hjust = 0, vjust = 1)
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Multimorbidity score from First use\n of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot <- ggplot(df_summary, aes(x = month, y = mean_score, fill = os)) +
geom_ribbon(aes(ymin = mean_score - se_score, ymax = mean_score + se_score), alpha = 0.2) +
geom_line(aes(color = os)) +
geom_point(aes(color = os), size = 1, fill = "white") +
labs(x = "Months after first use of drug", y = "Multimorbidity score") +
scale_x_continuous(limits = c(0, max(df_summary$month)), breaks = seq(0, max(df_summary$month), 3)) +
scale_fill_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
scale_color_manual(values = c("o" = "blue", "s" = "red"), name = "Drug type", labels = c("Bio-originators", "Biosimilars")) +
theme(axis.text = element_text(size = 10, family = "Arial"),
legend.position = "right",
legend.box.background = element_rect(color = "gray75", linetype = "solid", fill = "white", size = 0.5),
legend.title.align = 0.5,
legend.margin = margin(0, 5, 0, 5),
legend.text = element_text(size = 10, family = "Arial"),
legend.key.size = unit(0.75, "cm")) +
geom_label(aes(label = paste0("n = ", n_patients)),
position = position_nudge(y = 0.25),
fill = "gray80",
color = c("blue", "red")[as.factor(df_summary$os)],
size = 2,
# check_overlap = TRUE,
na.rm = TRUE,
label.padding = unit(0.1, "cm"),
label.r = unit(0.1, "cm")) +
ggtitle("Multimorbidity score from First use\n of Bio-originator and Biosimilar") +
theme(plot.title = element_text(size = 16, face = "bold", family = "Arial"))
my_plot
df
df_s
rbind(df_s, df_o)$increase
shapiro.test(rbind(df_s, df_o)$increase)
merged_df
merged_df %>% View()
merged_df
merged_df %>% group_by(main_death)
merged_df %>% summarise(main_death)
merged_df %>% filter(main_death != NA) %>% summarise(main_death)
merged_df %>% filter(!is.na(main_death))
merged_df %>% filter(!is.na(main_death))
merged_df %>% filter(!is.na(main_death)) %>% table(main_death)
merged_df %>% filter(!is.na(main_death)) %>% pull(main_death) %>% table()
merged_df %>% filter(!is.na(main_death)) %>% count(main_death)
merged_df %>% filter(!is.na(main_death)) %>% count(main_death) %>% filter(n > 10)
merged_df %>%
filter(!is.na(main_death)) %>%
count(main_death) %>%
filter(n > 10) %>%
arrange(desc(n))
weight_df
View(weight_df)
