)
# secondly, get the character strings for bios or bioo
bioo_string <- bio_df %>% filter(Type == "Bio-originator") %>% select(`Brand name`) %>% pull()
# as per Kuan's advice, if the drug name is just the drug name (i.e. not the brand name of bioo or bios), we can safely assume it is biooriginator
# and therefore I could add the drug name under the bioo_string
bioo_string <- c(bioo_string, c("INFLIXIMAB", "ADALIMUMAB", "RITUXIMAB"))
bios_string <- bio_df %>% filter(Type == "Biosimilar") %>% select(`Brand name`) %>% pull()
# remove some gaps
bioo_string <- gsub(pattern = "[[:space:]\u00A0]", replacement = "", x = bioo_string)
bios_string <- gsub(pattern = "[[:space:]\u00A0]", replacement = "", x = bios_string)
# now, create the bio column (which says if it is biosimilar or biooriginator)
# put the bios BEFORE bioO in case the drug name contains both the ingredient and the bios brand name, in which case the bios brand name should take precedence
prescription_sub <- prescription_sub %>%
mutate(
bioo_or_bios = case_when(
stringr::str_detect(DrugName, paste(bios_string, collapse = "|")) ~ "s",
stringr::str_detect(DrugName, paste(bioo_string, collapse = "|")) ~ "o", # using string infliximab, because sometimes only brand name, but not ingredient name given. So you would miss that if you hadn't use this string
TRUE ~ NA_character_)
)
prescription_sub
prescription_sub %>% unique(ReferenceKey) %>% count()
prescription_sub %>% unique(ReferenceKey) %>% n()
prescription_sub %>% unique(ReferenceKey)
unique(prescription_sub$ReferenceKey)
unique(prescription_sub$ReferenceKey) %>% length()
# now we have a prescription table with cleaned information. Now we need to merge the diagnosis table to ONLY get the pts that meet our criteria, and look at the descriptive statistics of their uptake
prescription_sub <- prescription_sub %>% filter(ReferenceKey %in% diagnosis_sub$ReferenceKey) # essential step
# remove white space and non-breaking space; convert to capital letters
drugs <- gsub("[[:space:]\u00A0]", "",
toupper(c(cdmard, bioo, bio_df$`Brand name`)))
# deliberately removed the adalimumab, rituximab, infliximab, or else i would lose some of them in the process
drugs <- setdiff(drugs, c("INFLIXIMAB", "ADALIMUMAB", "RITUXIMAB"))
# certolizumab pegol, just detect certolizumab instead
drugs <- replace(drugs, drugs == "CERTOLIZUMABPEGOL", "CERTOLIZUMAB")
prescription_traj <- prescription_sub %>%
mutate(
DrugName_clean = case_when(
str_detect(DrugName, str_c(drugs, collapse = "|")) ~ str_extract(DrugName, str_c(drugs, collapse = "|")),
str_detect(DrugName, str_c(c("INFLIXIMAB", "ADALIMUMAB", "RITUXIMAB"), collapse = "|")) ~ str_extract(DrugName, str_c(c("INFLIXIMAB", "ADALIMUMAB", "RITUXIMAB"), collapse = "|")),
TRUE ~ NA_character_) # this time NA if doesn't fall into any of our drug categories
)
# part of the flowchart
print(
paste0(
"Of the ",
prescription_traj %>% pull(ReferenceKey) %>% unique() %>% length(),
" patients, ",
prescription_traj %>% pull(ReferenceKey) %>% unique() %>% length() - prescription_traj %>% filter(!is.na(DrugName_clean)) %>% pull(ReferenceKey) %>% unique() %>% length(),
" of the RA patients did not have any drug related to RA i.e. cdmard, bmard or tsdmard prescribed to them even though they were labelled with an RA diagnosis. Conversely, ",
prescription_traj %>% filter(!is.na(DrugName_clean)) %>% pull(ReferenceKey) %>% unique() %>% length(),
" RA patients had received any drug of the aforementioned classes."
)
)
# where it is not NA; so we only take the non-NA entries
prescription_traj <- prescription_traj %>% filter(!is.na(DrugName_clean))
tnfi <- bioo_df %>% filter(`Mode of action` == "Tumor Necrosis Factor Inhibitor") %>%  pull(Agent) %>% toupper()
#  correct to get rid of pegol
tnfi <- replace(tnfi, tnfi == "CERTOLIZUMAB PEGOL", "CERTOLIZUMAB")
cd28 <- bioo_df %>% filter(`Mode of action` == "CD28") %>%  pull(Agent) %>% toupper()
cd20 <- bioo_df %>% filter(`Mode of action` == "CD20") %>%  pull(Agent) %>% toupper()
il6 <- bioo_df %>% filter(`Mode of action` == "IL-6") %>%  pull(Agent) %>% toupper()
jaki <- bioo_df %>% filter(`Mode of action` == "Janus kinase inhibitor") %>%  pull(Agent) %>% toupper()
# as per Kuan's suggestions to simplify the analysis and since no economic significance just umbrella the cdmard under cdmard, makes it easier
prescription_traj <- prescription_traj %>%
mutate(
DrugName_clean = case_when(
DrugName_clean %in% cdmard ~ "cdmard",
TRUE ~ DrugName_clean
)
)
prescription_traj <- prescription_traj %>%
mutate(
DrugName_clean_os = case_when(
str_detect(DrugName_clean, "REMICADE") ~ "INFLIXIMAB_o",
str_detect(DrugName_clean, "REMSIMA") ~ "INFLIXIMAB_s",
str_detect(DrugName_clean, "HUMIRA") ~ "ADALIMUMAB_o",
str_detect(DrugName_clean, "HULIO") ~ "ADALIMUMAB_s",
str_detect(DrugName_clean, "ADALLOCE") ~ "ADALIMUMAB_s",
str_detect(DrugName_clean, "AMGEVITA") ~ "ADALIMUMAB_s",
str_detect(DrugName_clean, "IDACIO") ~ "ADALIMUMAB_s",
str_detect(DrugName_clean, "HYRIMOZ") ~ "ADALIMUMAB_s",
str_detect(DrugName_clean, "MABTHERA") ~ "RITUXIMAB_o",
str_detect(DrugName_clean, "RIXATHON") ~ "RITUXIMAB_s",
str_detect(DrugName_clean, "TRUXIMA") ~ "RITUXIMAB_s",
str_detect(DrugName_clean, "INFLIXIMAB") ~ "INFLIXIMAB_o",
str_detect(DrugName_clean, "ADALIMUMAB") ~ "ADALIMUMAB_o",
str_detect(DrugName_clean, "RITUXIMAB") ~ "RITUXIMAB_o",
TRUE ~ DrugName_clean)
) # note even though a lot of brands, just for sake of completeness; our data has mostly HUMIRA, REMICADE, and REMSIMA; then a few more like MABTHERA, RIXATHON, TRUXIMA, AMGEVITA, HYRIMOZ
# now after creating the os column, also change for the normal column
prescription_traj <- prescription_traj %>%
mutate(
DrugName_clean = case_when(
str_detect(DrugName_clean, "REMICADE") ~ "INFLIXIMAB",
str_detect(DrugName_clean, "REMSIMA") ~ "INFLIXIMAB",
str_detect(DrugName_clean, "HUMIRA") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "HULIO") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "ADALLOCE") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "AMGEVITA") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "IDACIO") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "HYRIMOZ") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "MABTHERA") ~ "RITUXIMAB",
str_detect(DrugName_clean, "RIXATHON") ~ "RITUXIMAB",
str_detect(DrugName_clean, "TRUXIMA") ~ "RITUXIMAB",
str_detect(DrugName_clean, "INFLIXIMAB") ~ "INFLIXIMAB",
str_detect(DrugName_clean, "ADALIMUMAB") ~ "ADALIMUMAB",
str_detect(DrugName_clean, "RITUXIMAB") ~ "RITUXIMAB",
TRUE ~ DrugName_clean)
)
unique(prescription_traj$DrugName_clean_os)
unique(prescription_traj$DrugName_clean)
print(
paste0(
"Of the ",
prescription_traj %>% pull(ReferenceKey) %>% unique() %>% length(),
" patients, ",
prescription_traj %>% filter(DrugName_clean != "cdmard") %>% pull(ReferenceKey) %>% unique() %>% length(),
" of the RA patients had taken bMARD and are therefore included in the biologics-only treatment trajectory analysis."
)
)
cdmard <- c(cdmard, "cdmard")
# add column of drug mechanism of action (cDMARD, TNF inhibitor etc) for ease of stratification
prescription_traj <- prescription_traj %>%
mutate(
moa = case_when(
str_detect(DrugName_clean, paste(cdmard, collapse = "|")) ~ "cdmard",
str_detect(DrugName_clean, paste(tnfi, collapse = "|")) ~ "tnfi",
str_detect(DrugName_clean, paste(cd28, collapse = "|")) ~ "cd28",
str_detect(DrugName_clean, paste(cd20, collapse = "|")) ~ "cd20",
str_detect(DrugName_clean, paste(il6, collapse = "|")) ~ "il6",
str_detect(DrugName_clean, paste(jaki, collapse = "|")) ~ "jaki",
TRUE ~ NA_character_)
)
prescription_traj
# baseline table ----------------------------------------------------------
prescription_traj
print(
paste0(
"Of the ",
prescription_traj %>% pull(ReferenceKey) %>% unique() %>% length(),
" patients, ",
prescription_traj %>% filter(DrugName_clean != "cdmard") %>% pull(ReferenceKey) %>% unique() %>% length(),
" of the RA patients had taken bMARD and are therefore included in the biologics-only treatment trajectory analysis."
)
)
# baseline table ----------------------------------------------------------
prescription_traj %>% pull(ReferenceKey) %>% unique() %>% length()
prescription_traj
prescription_traj %>%
group_by(ReferenceKey, DrugName_clean) %>%
summarise(Count = n_distinct(DrugName_clean)) %>%
summarise(Total_Count = sum(Count))
prescription_traj %>%
group_by(ReferenceKey, DrugName_clean) %>%
summarise(Count = n_distinct(DrugName_clean))
prescription_traj %>% View()
prescription_traj %>% filter(DrugName_clean == "cdmard")
prescription_traj %>% filter(DrugName_clean == "cdmard") %>% pull(ReferenceKey) %>% unique()
prescription_traj %>% filter(DrugName_clean == "cdmard") %>% pull(ReferenceKey) %>% unique() %>% length()
prescription_traj %>%
filter(DrugName_clean == "cdmard") %>%
distinct(ReferenceKey) %>%
nrow()
unique(prescription_traj$DrugName_clean)
i <- "cdmard"
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
print(paste0(i, count))
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
print(paste0(i, " ", count))
# i <- "cdmard"
for (i in unique(prescription_traj$DrugName_clean)) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
print(paste0(i, " ", count))
}
sort(unique(prescription_traj$DrugName_clean))
# i <- "cdmard"
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
print(paste0(i, " ", count))
}
# i <- "cdmard"
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Count = count, stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Count = numeric(), stringsAsFactors = FALSE)
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Count = count, stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Count = count, stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = count, stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
prescription_traj
prescription_traj %>% distinct(ReferenceKey) %>% nrow()
total <- prescription_traj %>% distinct(ReferenceKey) %>% nrow()
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", count/total, ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total *100), ")"), stringsAsFactors = FALSE)
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
total <- prescription_traj %>% distinct(ReferenceKey) %>% nrow()
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total *100), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
total <- prescription_traj %>% distinct(ReferenceKey) %>% nrow()
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
total <- prescription_traj %>% distinct(ReferenceKey) %>% nrow()
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
sort(unique(prescription_traj$DrugName_clean_os))
drug_names[grepl("_", drug_names)]
sort(unique(prescription_traj$DrugName_clean_os))[grepl("_", sort(unique(prescription_traj$DrugName_clean_os)))]
for (i in sort(unique(prescription_traj$DrugName_clean_os))[grepl("_", sort(unique(prescription_traj$DrugName_clean_os)))]) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
for (i in sort(unique(prescription_traj$DrugName_clean_os))[grepl("_", sort(unique(prescription_traj$DrugName_clean_os)))]) {
count <- prescription_traj %>%
filter(DrugName_clean_os == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
# Create an empty dataframe
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
total <- prescription_traj %>% distinct(ReferenceKey) %>% nrow()
for (i in sort(unique(prescription_traj$DrugName_clean))) {
count <- prescription_traj %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
for (i in sort(unique(prescription_traj$DrugName_clean_os))[grepl("_", sort(unique(prescription_traj$DrugName_clean_os)))]) {
count <- prescription_traj %>%
filter(DrugName_clean_os == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
result_df
df <- prescription_traj
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
results_table
results_df
result_df
total
data.frame(DrugName = "Total number", Full_Count = total, stringsAsFactors = FALSE)
rbind(data.frame(DrugName = "Total number", Full_Count = total, stringsAsFactors = FALSE), result_df)
prescription_traj %>%
group_by(ReferenceKey, DrugName_clean) %>%
summarise(Count = n_distinct(DrugName_clean)) %>%
summarise(Total_Count = sum(Count))
# obtain reference key of those with bmard
prescription_traj %>% filter(DrugName_clean != "cdmard") %>% select(ReferenceKey)
# obtain reference key of those with bmard
prescription_traj %>% filter(DrugName_clean != "cdmard") %>% select(ReferenceKey) %>% left_join(prescription_traj)
# obtain reference key of those with bmard
temp_ref <- prescription_traj %>% filter(DrugName_clean != "cdmard") %>% select(ReferenceKey)
temp_ref
prescription_traj[prescription_traj$ReferenceKey %in% temp_ref$ReferenceKey, ]
df <- prescription_traj[prescription_traj$ReferenceKey %in% temp_ref$ReferenceKey, ]
df %>% distinct(ReferenceKey)
# first run using full count
df <- prescription_traj
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
result_df
# called by main script; just very brief script to get the baseline characteristics table, can run twice so made this a separate script
total <- df %>% distinct(ReferenceKey) %>% nrow()
total
result_df <- rbind(data.frame(DrugName = "Total number", Full_Count = total, stringsAsFactors = FALSE), result_df)
result_df
for (i in sort(unique(df$DrugName_clean))) {
count <- df %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
# called by main script; just very brief script to get the baseline characteristics table, can run twice so made this a separate script
total <- df %>% distinct(ReferenceKey) %>% nrow()
result_df <- rbind(data.frame(DrugName = "Total number", Full_Count = as.character(total), stringsAsFactors = FALSE), result_df)
for (i in sort(unique(df$DrugName_clean))) {
count <- df %>%
filter(DrugName_clean == i) %>%
distinct(ReferenceKey) %>%
nrow()
# Create a new row with DrugName and Count
new_row <- data.frame(DrugName = i, Full_Count = paste0(count, " (", round(count/total * 100, 2), ")"), stringsAsFactors = FALSE)
# Append the new row to the result dataframe
result_df <- bind_rows(result_df, new_row)
}
# first run using full count
df <- prescription_traj
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
# first run using full count
df <- prescription_traj
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
reuslt_df
result_df
result_df1 <- result_df
# obtain reference key of those with bmard
temp_ref <- prescription_traj %>% filter(DrugName_clean != "cdmard") %>% select(ReferenceKey)
df <- prescription_traj[prescription_traj$ReferenceKey %in% temp_ref$ReferenceKey, ]
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
result_df
result_df %>%
rename(sub_count = Full_count)
result_df %>%
rename(sub_count = Full_Count)
result_df2 <- result_df %>%
rename(sub_count = Full_Count)
full_join(result_df1, result_df2)
# first run using full count
df <- prescription_traj
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
result_df1 <- result_df
# obtain reference key of those with bmard
temp_ref <- prescription_traj %>% filter(DrugName_clean != "cdmard") %>% select(ReferenceKey)
df <- prescription_traj[prescription_traj$ReferenceKey %in% temp_ref$ReferenceKey, ]
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
result_df2 <- result_df %>%
rename(sub_count = Full_Count)
full_join(result_df1, result_df2)
result_df <- full_join(result_df1, result_df2)
write.csv(result_df, paste0(path, "/charts/", "baseline_df.csv"), row.names = FALSE)
result_df
result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
inpatient
diagnosis
write.csv(result_df, paste0(path, "/charts/", "baseline_df.csv"), row.names = FALSE)
result_df$DrugName <- tolower(result_df$DrugName)
result_df
result_df$DrugName <- str_to_title(result_df$DrugName)
result_df
write.csv(result_df, paste0(path, "/charts/", "baseline_df.csv"), row.names = FALSE)
result_df <- result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df$DrugName <- str_to_title(result_df$DrugName)
write.csv(result_df, paste0(path, "/charts/", "baseline_df.csv"), row.names = FALSE)
result_df <- result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df
result_df <- result_df %>%
rename(Full_count = "2009-2022 cohort",
sub_count = "2009-2022 subcohort for biologics trajectory analysis")
result_df <- result_df %>%
rename(`2009-2022 subcohort for biologics trajectory analysis` = sub_count)
result_df
result_df <- result_df %>%
rename(`2009-2022 subcohort for biologics trajectory analysis` = sub_count,
`2009-2022 cohort` = Full_Count)
# first run using full count
df <- prescription_traj
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
result_df1 <- result_df
# obtain reference key of those with bmard
temp_ref <- prescription_traj %>% filter(DrugName_clean != "cdmard") %>% select(ReferenceKey)
df <- prescription_traj[prescription_traj$ReferenceKey %in% temp_ref$ReferenceKey, ]
result_df <- data.frame(DrugName = character(), Full_Count = character(), stringsAsFactors = FALSE)
source("/Users/elsiechan/Documents/GitHub/rheumatoid/05_reference_table_stats.R")
result_df2 <- result_df %>%
rename(sub_count = Full_Count)
result_df <- full_join(result_df1, result_df2)
result_df$DrugName <- str_to_title(result_df$DrugName)
result_df <- result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df <- result_df %>%
rename(`2009-2022 subcohort for biologics trajectory analysis` = sub_count,
`2009-2022 cohort` = Full_Count)
result_df
result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df %>%
order(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df %>%
arrange(DrugName != "Total number", DrugName != "cdmard", DrugName)
result_df <- result_df[order(result_df$DrugName != "Total Number", result_df$DrugName != "Cdmard", result_df$DrugName), ]
result_df
write.csv(result_df, paste0(path, "/charts/", "baseline_df.csv"), row.names = FALSE)
