# spare code i used, previous for calculating the scores

# for each patient, get the character vector of the ICD9 first
pt_icds_all <- diagnosis_sub %>%
  group_by(Reference.Key.) %>%
  summarise(ICD = paste(unique(ICD), collapse = ","))

# output dataframe of the same reference number but NA for score column
scores_df <- data.frame(pt_icds_all[, "Reference.Key."], score = NA, score_before_ra = NA)

# for loop looping each row to extract the ICDs; then create the regex out of the ICD vector; for each of them grep the weight_df to see if matches any row; cumulatively sum the assigned weight

for (i in seq(nrow(pt_icds_all))) {
  
  # create the regex by replacing the , by |, OR. No ICD have 4 digits so is ok, no need to worry about 300 matching 3001 (4 digits before a dot)
  icds_regex <- pt_icds_all[i,"ICD"] %>% pull() %>% gsub(pattern = ",", replacement ="|", fixed = TRUE) %>% gsub(pattern = ".", replacement ="\\.", fixed = TRUE) 
  
  # for each item, use grep, get all the relevant row in the weight_df df
  matching_rows <- grepl(x = weight_df$ICD9_clean,
                         pattern = icds_regex)
  
  if (any(matching_rows)) {
    # then cumulatively sum the assigned_weight
    score <- weight_df[matching_rows, ] %>% summarise(score = sum(Assigned_weight)) %>% pull()
  } else {
    score <-  0
  }
  
  # then that which the reference key at i matches the output, update the score
  scores_df[which(scores_df$Reference.Key. == pt_icds_all$Reference.Key.[i]), "score"] <- score
  
}


# for debugging, making sure when the grep returns an entry actually the same icd we are looking for 
# grep(pattern = "250", x = weight_df$ICD9_clean, value = TRUE)
# grep(pattern = "414", x = weight_df$ICD9_clean, value = TRUE)
# grep(pattern = "715", x = weight_df$ICD9_clean, value = TRUE)
# icds_regex


# get the weighting score for the chronic conditions BEFORE diagnosing first_ra
# if TRUE, then use ICD value. If FALSE, just use NA value
pt_icds_before_ra <- diagnosis_sub %>%
  mutate(
    ICD_before_ra = case_when(
      before_ra == TRUE ~ ICD,
      before_ra == FALSE ~ "NA")
  ) %>% 
  group_by(Reference.Key.) %>%
  summarise(ICD_before_ra = paste(unique(ICD_before_ra), collapse = ","))

# same as last time so for explanation just see above
for (i in seq(nrow(pt_icds_before_ra))) {
  icds_regex <-
    pt_icds_before_ra[i, "ICD_before_ra"] %>% pull() %>% gsub(pattern = ",",
                                                              replacement = "|",
                                                              fixed = TRUE) %>% gsub(pattern = ".",
                                                                                     replacement = "\\.",
                                                                                     fixed = TRUE) 
  
  matching_rows <- grepl(x = weight_df$ICD9_clean,
                         pattern = icds_regex)
  
  if (any(matching_rows)) {
    score_before_ra <- weight_df[matching_rows, ] %>% summarise(score = sum(Assigned_weight)) %>% pull()
  } else {
    score_before_ra <-  0
  }
  
  
  # then that which the reference key at i matches the output, update the score
  scores_df[which(scores_df$Reference.Key. == pt_icds_before_ra$Reference.Key.[i]), "score_before_ra"] <- score_before_ra
}

scores_df <- scores_df[order(as.numeric(scores_df$Reference.Key.)),]
